# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type GenericResponse {
  status: String!
}

type Message {
  author: User
  author_id: String!
  content: String!
  created_at: DateTime!
  id: String!
  room: Room
  room_id: String!
  updated_at: DateTime!
}

type Mutation {
  archiveRoom(room_id: String!): GenericResponse!
  createRoom(input: RoomInput!): Room!
  createUser(input: UserInput!): GenericResponse!
}

type Query {
  getMessage(id: String!): Message!
  getMessages(room_id: String!): [Message!]!
  getMessagesForAuthor(author_id: String!, room_id: String!): [Message!]!
  getRoom(id: String!): Room!
  getRooms: [Room!]!
  getUser(id: String!): User!
  getUserByEmail(email: String!): User!
  getUsers: [User!]!
}

type Room {
  archived: Boolean!
  cover_image: String
  created_at: DateTime!
  description: String
  id: String!
  name: String!
  updated_at: DateTime!
}

input RoomInput {
  cover_image: String
  description: String
  name: String!
}

type User {
  created_at: DateTime!
  email: String!
  first_name: String!
  id: String!
  last_name: String!
  updated_at: DateTime!
}

input UserInput {
  email: String!
  first_name: String!
  last_name: String!
  password: String!
}
